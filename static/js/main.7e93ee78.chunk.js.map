{"version":3,"sources":["Cell.js","Row.js","Grid.js","gridSize.js","Game.js","WinGame.js","TieGame.js","App.js","registerServiceWorker.js","index.js"],"names":["Cell","props","column","row","clickHandler","bind","updateCell","event","this","preventDefault","game","value","getCell","className","onClick","Component","Row","cells","Array","size","fill","map","key","Grid","rows","defaultGridSize","gridSize","URLparameter","window","location","hash","slice","split","el","part","decodeURIComponent","find","parseInt","Game","List","setSize","cellsLeft","counters","columns","diagonalLTR","diagonalRTL","Map","valueSeq","flatten","Math","abs","get","instance","newRow","set","setIn","unit","update","WinGame","winner","TieGame","App","state","currentSign","cellIsSet","setState","prevState","status","statusComponent","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4SAEqBA,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,OAASD,EAAMC,OACpB,EAAKC,IAAMF,EAAME,IACjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKL,MAAMK,WALZ,E,0EAQNC,GAAQ,IAAD,EACMC,KAAKP,MAArBE,EADU,EACVA,IAAKD,EADK,EACLA,OAGb,OAFAK,EAAME,iBACND,KAAKF,WAAW,CAAEJ,SAAQC,SACnB,I,+BAGC,IAAD,EACuBK,KAAKP,MAA3BS,EADD,EACCA,KAAMP,EADP,EACOA,IAAKD,EADZ,EACYA,OACbS,EAAQD,EAAKE,QAAQ,CAAEV,SAAQC,QAC/BU,EAAYF,EAAQ,YAAc,GACxC,OACE,yBAAKE,UAAS,eAAUA,GAAaC,QAASN,KAAKJ,cAChDO,O,GAtByBI,cCCbC,E,iLACT,IAAD,EAC2BR,KAAKP,MAA/BS,EADD,EACCA,KAAMP,EADP,EACOA,IAAKG,EADZ,EACYA,WACbW,EAAQC,MAAMR,EAAKS,MAAMC,KAAK,MAAMC,IAAI,SAACV,EAAOT,GACpD,OAAO,kBAAC,EAAD,CAAMC,IAAKA,EAAKD,OAAQA,EAAQoB,IAAKpB,EAAQI,WAAYA,EAAYI,KAAMA,MAEpF,OACE,yBAAKG,UAAU,OACZI,O,GARwBF,aCAZQ,E,iLACT,IAAD,EACuBf,KAAKP,MAA3BK,EADD,EACCA,WAAYI,EADb,EACaA,KACdc,EAAON,MAAMR,EAAKS,MAAMC,KAAK,MAAMC,IAAI,SAACV,EAAOR,GACnD,OAAO,kBAAC,EAAD,CAAKA,IAAKA,EAAKmB,IAAKnB,EAAKO,KAAMA,EAAMJ,WAAYA,MAE1D,OACE,yBAAKO,UAAU,QACZW,O,GARyBT,aCH5BU,EAAkB,EAmBTC,MAjBf,SAAkBP,GAChB,IAAMQ,EAUCC,OAAOC,SAASC,KAAKC,MAAM,GAC/BC,MAAM,KACNX,IAAI,SAACY,GAAD,OAAQA,EAAGD,MAAM,KAAKX,IAAI,SAACa,GAAD,OAAUC,mBAAmBD,OAC3DE,KAAK,SAACH,GAAD,MAAkB,aAAVA,EAAG,KAZnB,OAAIN,EACKU,SAASV,EAAa,GAAI,IAE1BF,G,OCLUa,E,WACnB,WAAYnB,GAAO,oBACjBX,KAAKW,KAAOA,EACZX,KAAKS,MAAQsB,cAAOC,QAAQrB,GAAME,IAAI,WACpC,OAAOkB,cAAOC,QAAQrB,GAAME,IAAI,kBAAM,SAGxCb,KAAKiC,UAAYjC,KAAKW,KAAOX,KAAKW,KAClCX,KAAKkC,SAAW,CACdlB,KAAMe,cAAOC,QAAQrB,GAAME,IAAI,kBAAM,IACrCsB,QAASJ,cAAOC,QAAQrB,GAAME,IAAI,kBAAM,IACxCuB,YAAa,EACbC,YAAa,G,qDAIP,IAAD,OAKP,OAJeC,YAAItC,KAAKkC,UACrBK,WACAC,UACAZ,KAAK,SAACH,GAAD,OAAQgB,KAAKC,IAAIjB,KAAQ,EAAKd,QAEtC,KAAKX,KAAKW,KACR,MAAO,IACT,KAAMX,KAAKW,KACT,MAAO,IACT,QACE,OAAuB,IAAnBX,KAAKiC,UACA,MAEF,a,mCAIiB,IAAhBvC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAClB,OAAyC,OAAlCK,KAAKI,QAAQ,CAAEV,SAAQC,U,iCAGN,IAAhBD,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAChB,OAAOK,KAAKS,MAAMkC,IAAIhD,GAAKgD,IAAIjD,K,gCAGD,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,IAAKQ,EAAS,EAATA,MACdyC,EAAW,IAAId,EAAK9B,KAAKW,MAGzBkC,EAAS7C,KAAKS,MAAMkC,IAAIhD,GAAKmD,IAAIpD,EAAQS,GAC/CyC,EAASnC,MAAQT,KAAKS,MAAMsC,MAAM,CAACpD,GAAMkD,GAGzC,IAAMG,EAAiB,MAAV7C,EAAgB,GAAK,EAclC,OAbAyC,EAASV,SAASlB,KAAOhB,KAAKkC,SAASlB,KAAKiC,OAAOtD,EAAK,SAAA8B,GAAE,OAAIA,EAAKuB,IACnEJ,EAASV,SAASC,QAAUnC,KAAKkC,SAASC,QAAQc,OAAOvD,EAAQ,SAAA+B,GAAE,OAAIA,EAAKuB,IAC5EJ,EAASV,SAASE,YAAcpC,KAAKkC,SAASE,YAC1CzC,IAAQD,IACVkD,EAASV,SAASE,aAAeY,GAEnCJ,EAASV,SAASG,YAAcrC,KAAKkC,SAASG,YAC1C3C,IAAWM,KAAKW,KAAO,EAAIhB,IAC7BiD,EAASV,SAASG,aAAeW,GAGnCJ,EAASX,UAAYjC,KAAKiC,UAAY,EAE/BW,M,KChEUM,E,iLAEjB,OACE,yBAAK7C,UAAU,sBACZL,KAAKP,MAAM0D,OADd,a,GAH+B5C,aCChB6C,G,uLAEjB,OACE,yBAAK/C,UAAU,WACb,yDACA,oCACA,6CACiB,6BADjB,2BAE0B,6BAF1B,gBAKA,mE,GAX6BE,cCkEtB8C,E,YA3Db,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KACD6D,MAAQ,CACXpD,KAAM,IAAI4B,EAAKZ,KACfqC,YAAa,KAEf,EAAKzD,WAAa,EAAKA,WAAWD,KAAhB,gBAND,E,2EASU,IAAhBH,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IACfK,KAAKsD,MAAMpD,KAAKsD,UAAU,CAAE9D,SAAQC,SAGxCK,KAAKyD,SAAS,SAACC,EAAWjE,GACxB,MAAO,CACLS,KAAMwD,EAAUxD,KAAK+C,OAAO,CAAEvD,SAAQC,MAAKQ,MAAOuD,EAAUH,cAE5DA,YAAuC,MAA1BG,EAAUH,YAAsB,IAAM,S,wCAMvD,IAAMrD,EAAOF,KAAKsD,MAAMpD,KAClByD,EAASzD,EAAKyD,SACpB,OAAQA,GACR,IAAK,UACH,OACE,yBAAKtD,UAAU,kBACb,kBAAC,EAAD,CAAMP,WAAYE,KAAKF,WAAYI,KAAMA,KAG/C,IAAK,IACL,IAAK,IACH,OACE,yBAAKG,UAAU,kBACb,kBAAC,EAAD,CAAS8C,OAAQQ,KAGvB,IAAK,MACH,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,OAGN,QACE,MAAO,iB,+BAKT,OACE,yBAAKA,UAAU,cACZL,KAAK4D,uB,GAvDIrD,aCEZsD,EAAcC,QACW,cAA7B1C,OAAOC,SAAS0C,UAEe,UAA7B3C,OAAOC,SAAS0C,UAEhB3C,OAAOC,SAAS0C,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnB,QACfa,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,4CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBlE,OAAOC,UAC3CkE,SAAWnE,OAAOC,SAASkE,OAIvC,OAGFnE,OAAOoE,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,GAAN,sBAEPzB,IAiDV,SAAiCK,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAAS/B,SACuD,IAAhE+B,EAASC,QAAQhD,IAAI,gBAAgBiD,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,KAAK,SAAAC,GACjCA,EAAauB,aAAaxB,KAAK,WAC7BlD,OAAOC,SAAS0E,aAKpB9B,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAkB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCzCxB+B,K","file":"static/js/main.7e93ee78.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Cell extends Component {\n  constructor(props) {\n    super(props)\n    this.column = props.column\n    this.row = props.row\n    this.clickHandler = this.clickHandler.bind(this)\n    this.updateCell = this.props.updateCell\n  }\n\n  clickHandler(event) {\n    const { row, column } = this.props\n    event.preventDefault()\n    this.updateCell({ column, row })\n    return false\n  }\n\n  render() {\n    const { game, row, column } = this.props\n    const value = game.getCell({ column, row })\n    const className = value ? 'cell--set' : ''\n    return (\n      <div className={`cell ${className}`} onClick={this.clickHandler}>\n        {value}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Cell from './Cell.js'\n\nexport default class Row extends Component {\n  render() {\n    const { game, row, updateCell } = this.props\n    const cells = Array(game.size).fill(null).map((value, column) => {\n      return <Cell row={row} column={column} key={column} updateCell={updateCell} game={game} />\n    })\n    return (\n      <div className=\"row\">\n        {cells}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Row from './Row.js'\n\nexport default class Grid extends Component {\n  render() {\n    const { updateCell, game }  = this.props\n    const rows = Array(game.size).fill(null).map((value, row) => {\n      return <Row row={row} key={row} game={game} updateCell={updateCell} />\n    })\n    return (\n      <div className=\"grid\">\n        {rows}\n      </div>\n    )\n  }\n}\n","const defaultGridSize = 3\n\nfunction gridSize(size) {\n  const URLparameter = sizeFromURLFragment()\n  if (URLparameter) {\n    return parseInt(URLparameter[1], 10)\n  } else {\n    return defaultGridSize\n  }\n}\n\n// \"#gridSize=3\"\nfunction sizeFromURLFragment() {\n  return window.location.hash.slice(1)\n    .split('&')\n    .map((el) => el.split('=').map((part) => decodeURIComponent(part)))\n    .find((el) => el[0] === 'gridSize')\n}\n\nexport default gridSize\n","import { List, Map } from 'immutable'\n\nexport default class Game {\n  constructor(size) {\n    this.size = size\n    this.cells = List().setSize(size).map(() => {\n      return List().setSize(size).map(() => null)\n    })\n\n    this.cellsLeft = this.size * this.size\n    this.counters = {\n      rows: List().setSize(size).map(() => 0),\n      columns: List().setSize(size).map(() => 0),\n      diagonalLTR: 0,\n      diagonalRTL: 0,\n    }\n  }\n\n  status() {\n    const result = Map(this.counters)\n      .valueSeq()\n      .flatten()\n      .find((el) => Math.abs(el) === this.size)\n    switch (result) {\n    case this.size:\n      return 'X'\n    case -this.size:\n      return 'O'\n    default:\n      if (this.cellsLeft === 0) {\n        return 'tie'\n      }\n      return 'ongoing'\n    }\n  }\n\n  cellIsSet({ column, row }) {\n    return this.getCell({ column, row }) !== null\n  }\n\n  getCell({ column, row }) {\n    return this.cells.get(row).get(column)\n  }\n\n  update({ column, row, value }) {\n    const instance = new Game(this.size)\n\n    // Updates the cell.\n    const newRow = this.cells.get(row).set(column, value)\n    instance.cells = this.cells.setIn([row], newRow)\n\n    // Updates counters.\n    const unit = value === 'X' ? 1 : -1\n    instance.counters.rows = this.counters.rows.update(row, el => el + unit)\n    instance.counters.columns = this.counters.columns.update(column, el => el + unit)\n    instance.counters.diagonalLTR = this.counters.diagonalLTR\n    if (row === column) {\n      instance.counters.diagonalLTR += unit\n    }\n    instance.counters.diagonalRTL = this.counters.diagonalRTL\n    if (column === this.size - 1 - row) {\n      instance.counters.diagonalRTL += unit\n    }\n\n    instance.cellsLeft = this.cellsLeft - 1\n\n    return instance\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class WinGame extends Component {\n  render() {\n    return (\n      <div className=\"WinGame text-white\">\n        {this.props.winner} won.\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './TieGame.css'\n\nexport default class TieGame extends Component {\n  render() {\n    return (\n      <div className=\"TieGame\">\n        <p>Greetings Professor Falken</p>\n        <p>Hello</p>\n        <p>\n          A strange game.<br />\n          The only winning move is<br />\n          not to play.\n        </p>\n        <p>How about a nice game of chess?</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport Grid from './Grid.js'\nimport gridSize from './gridSize.js'\nimport Game from './Game.js'\nimport WinGame from './WinGame.js'\nimport TieGame from './TieGame.js'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      game: new Game(gridSize()),\n      currentSign: 'X'\n    }\n    this.updateCell = this.updateCell.bind(this)\n  }\n\n  updateCell({ column, row }) {\n    if (this.state.game.cellIsSet({ column, row })) {\n      return\n    }\n    this.setState((prevState, props) => {\n      return {\n        game: prevState.game.update({ column, row, value: prevState.currentSign }),\n        // Switches between signes each turn.\n        currentSign: prevState.currentSign === 'X' ? 'O' : 'X',\n      }\n    })\n  }\n\n  statusComponent() {\n    const game = this.state.game\n    const status = game.status()\n    switch (status) {\n    case 'ongoing':\n      return (\n        <div className=\"App height-100\">\n          <Grid updateCell={this.updateCell} game={game} />\n        </div>\n      )\n    case 'X':\n    case 'O':\n      return (\n        <div className=\"App height-100\">\n          <WinGame winner={status} />\n        </div>\n      )\n    case 'tie':\n      return (\n        <div className=\"App\">\n          <TieGame />\n        </div>\n      )\n    default:\n      return '<p>WAT.</p>'\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"height-100\">\n        {this.statusComponent()}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}